global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population$name <<- global_population$country
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
# save data
write_csv(global_population, './data/global_population.csv')
# _________________________________ World Map Data _________________________________
data("World")
# clean case data
case_data <- n_cases$global %>% group_by(country) %>%
summarise(cases=max(cum_confirm),
cum_heal=max(cum_heal),
cum_dead=max(cum_dead)) %>%
mutate(name=factor(country))
# merge case data
world <- merge(World, case_data, by='name')
# merge median age data
world <<- merge(world, med_age, by='name')
merge(world, global_population, by='name')
global_population
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population$name <<- global_population$country
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
# save data
write_csv(global_population, './data/global_population.csv')
global_population
head(global_population)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
head(global_population)
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population$name <<- global_population$country
head(global_population)
get_data <- function() {
# run to fetch & clean all the data
# ______________________________ South African Data ______________________________
# provincial data
province <- c('Western Cape','Eastern Cape','Northern Cape', 'Free State', 'KwaZulu-Natal', 'North West',
'Gauteng', 'Mpumalanga', 'Limpopo')
population <- c(6621103, 6522734, 1225555, 2954348, 11384722, 3978955, 14717040, 4523874, 5797275)
population_2 <- paste(round(population/1000000, 2), 'm', sep='')
density <- c(51.1, 38.6, 3.3, 22.8, 120.7, 37.9, 809.6, 59.1, 46.1)
provincial.data <- data.frame(province, population, population_2, density, stringsAsFactors=FALSE)
# --- Add later ---               # Gender & Age demographics
Age <- c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+')
Male <- c('5 292 766','4 842 847','5 237 328','3 754 553','2 598 068','1 823 299','1 013 912','458 781','176 237')
Female <- c('5 212 437', '4 755 516', '5 196 531', '2 751 224', '2 970 834', '2 192 398', '1 329 660', '770 816', '402 352')
total <- c('10 505 203','9 598 363','10 433 859','6 505 777','5 568 902','4 015 697','2 343 572','1 229 597','419 989' )
age.data <- data.frame(Age, Male, Female,total, stringsAsFactors=FALSE)
# --- Add later ---
# Get South African Covid Data
covid_sa_url <- 'https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_South_Africa'
covid_sa <<- read_html(covid_sa_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table[3]') %>% html_table(fill=T)
# geospatial data
south_africa <<- readShapeSpatial('data/gadm36_ZAF_shp/gadm36_ZAF_1.shp')
# ______________________________ South African Data ______________________________
# _________________________________ Global Data _________________________________
# global case data
n_cases <<- load_nCov2019(lang='en')
# median population data
med_age <<- read.csv('data/median-age.csv')
# clean
med_age <<- group_by(med_age, Entity) %>% filter(Year==2020) %>%
transmute(name=factor(Entity),
code=Code,
country=Entity,
median_age=UN.Population.Division..Median.Age...2017...years.)
# Global Population Data
global_population_url <- 'https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population'
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population$name <<- global_population$country
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
# save data
write_csv(global_population, './data/global_population.csv')
# _________________________________ Global Data _________________________________
# _________________________________ Concatenate Data _________________________________
# Extract number of cases
test <- t(covid_sa[covid_sa$Date=='Cases',1:10])
test <- data.frame(test[2:nrow(test),])
colnames(test) <- 'Cases'
# test$Cases <- as.numeric(as.character(test$Cases))
# add to dataframe
south_africa@data <<- cbind(test, south_africa@data)
# province data
south_africa@data <<- merge(south_africa@data, provincial.data, by.x='NAME_1', by.y='province')
# _________________________________ Concatenate Data _________________________________
# _________________________________ World Map Data _________________________________
data("World")
# clean case data
case_data <- n_cases$global %>% group_by(country) %>%
summarise(cases=max(cum_confirm),
cum_heal=max(cum_heal),
cum_dead=max(cum_dead)) %>%
mutate(name=factor(country))
# merge case data
world <- merge(World, case_data, by='name')
# merge median age data
world <<- merge(world, med_age, by='name')
world <<- merge(world, global_population, by='name')
}
get_data()
head(world)
names(world)
global_population
names(global_population)
head(global_population)
global_population$name <<- global_population$country
get_data <- function() {
# run to fetch & clean all the data
# ______________________________ South African Data ______________________________
# provincial data
province <- c('Western Cape','Eastern Cape','Northern Cape', 'Free State', 'KwaZulu-Natal', 'North West',
'Gauteng', 'Mpumalanga', 'Limpopo')
population <- c(6621103, 6522734, 1225555, 2954348, 11384722, 3978955, 14717040, 4523874, 5797275)
population_2 <- paste(round(population/1000000, 2), 'm', sep='')
density <- c(51.1, 38.6, 3.3, 22.8, 120.7, 37.9, 809.6, 59.1, 46.1)
provincial.data <- data.frame(province, population, population_2, density, stringsAsFactors=FALSE)
# --- Add later ---               # Gender & Age demographics
Age <- c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+')
Male <- c('5 292 766','4 842 847','5 237 328','3 754 553','2 598 068','1 823 299','1 013 912','458 781','176 237')
Female <- c('5 212 437', '4 755 516', '5 196 531', '2 751 224', '2 970 834', '2 192 398', '1 329 660', '770 816', '402 352')
total <- c('10 505 203','9 598 363','10 433 859','6 505 777','5 568 902','4 015 697','2 343 572','1 229 597','419 989' )
age.data <- data.frame(Age, Male, Female,total, stringsAsFactors=FALSE)
# --- Add later ---
# Get South African Covid Data
covid_sa_url <- 'https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_South_Africa'
covid_sa <<- read_html(covid_sa_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table[3]') %>% html_table(fill=T)
# geospatial data
south_africa <<- readShapeSpatial('data/gadm36_ZAF_shp/gadm36_ZAF_1.shp')
# ______________________________ South African Data ______________________________
# _________________________________ Global Data _________________________________
# global case data
n_cases <<- load_nCov2019(lang='en')
# median population data
med_age <<- read.csv('data/median-age.csv')
# clean
med_age <<- group_by(med_age, Entity) %>% filter(Year==2020) %>%
transmute(name=factor(Entity),
code=Code,
country=Entity,
median_age=UN.Population.Division..Median.Age...2017...years.)
# Global Population Data
global_population_url <- 'https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population'
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
global_population$name <<- global_population$country
# save data
write_csv(global_population, './data/global_population.csv')
# _________________________________ Global Data _________________________________
# _________________________________ Concatenate Data _________________________________
# Extract number of cases
test <- t(covid_sa[covid_sa$Date=='Cases',1:10])
test <- data.frame(test[2:nrow(test),])
colnames(test) <- 'Cases'
# test$Cases <- as.numeric(as.character(test$Cases))
# add to dataframe
south_africa@data <<- cbind(test, south_africa@data)
# province data
south_africa@data <<- merge(south_africa@data, provincial.data, by.x='NAME_1', by.y='province')
# _________________________________ Concatenate Data _________________________________
# _________________________________ World Map Data _________________________________
data("World")
# clean case data
case_data <- n_cases$global %>% group_by(country) %>%
summarise(cases=max(cum_confirm),
cum_heal=max(cum_heal),
cum_dead=max(cum_dead)) %>%
mutate(name=factor(country))
# merge case data
world <- merge(World, case_data, by='name')
# merge median age data
world <<- merge(world, med_age, by='name')
world <<- merge(world, global_population, by='name')
}
get_data()
head(global_population)
head(world)
names(world)
merge(world, global_population, by='name', all.x=TRUE)
get_data <- function() {
# run to fetch & clean all the data
# ______________________________ South African Data ______________________________
# provincial data
province <- c('Western Cape','Eastern Cape','Northern Cape', 'Free State', 'KwaZulu-Natal', 'North West',
'Gauteng', 'Mpumalanga', 'Limpopo')
population <- c(6621103, 6522734, 1225555, 2954348, 11384722, 3978955, 14717040, 4523874, 5797275)
population_2 <- paste(round(population/1000000, 2), 'm', sep='')
density <- c(51.1, 38.6, 3.3, 22.8, 120.7, 37.9, 809.6, 59.1, 46.1)
provincial.data <- data.frame(province, population, population_2, density, stringsAsFactors=FALSE)
# --- Add later ---               # Gender & Age demographics
Age <- c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+')
Male <- c('5 292 766','4 842 847','5 237 328','3 754 553','2 598 068','1 823 299','1 013 912','458 781','176 237')
Female <- c('5 212 437', '4 755 516', '5 196 531', '2 751 224', '2 970 834', '2 192 398', '1 329 660', '770 816', '402 352')
total <- c('10 505 203','9 598 363','10 433 859','6 505 777','5 568 902','4 015 697','2 343 572','1 229 597','419 989' )
age.data <- data.frame(Age, Male, Female,total, stringsAsFactors=FALSE)
# --- Add later ---
# Get South African Covid Data
covid_sa_url <- 'https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_South_Africa'
covid_sa <<- read_html(covid_sa_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table[3]') %>% html_table(fill=T)
# geospatial data
south_africa <<- readShapeSpatial('data/gadm36_ZAF_shp/gadm36_ZAF_1.shp')
# ______________________________ South African Data ______________________________
# _________________________________ Global Data _________________________________
# global case data
n_cases <<- load_nCov2019(lang='en')
# median population data
med_age <<- read.csv('data/median-age.csv')
# clean
med_age <<- group_by(med_age, Entity) %>% filter(Year==2020) %>%
transmute(name=factor(Entity),
code=Code,
country=Entity,
median_age=UN.Population.Division..Median.Age...2017...years.)
# Global Population Data
global_population_url <- 'https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population'
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
global_population$name <<- global_population$country
# save data
write_csv(global_population, './data/global_population.csv')
# _________________________________ Global Data _________________________________
# _________________________________ Concatenate Data _________________________________
# Extract number of cases
test <- t(covid_sa[covid_sa$Date=='Cases',1:10])
test <- data.frame(test[2:nrow(test),])
colnames(test) <- 'Cases'
# test$Cases <- as.numeric(as.character(test$Cases))
# add to dataframe
south_africa@data <<- cbind(test, south_africa@data)
# province data
south_africa@data <<- merge(south_africa@data, provincial.data, by.x='NAME_1', by.y='province')
# _________________________________ Concatenate Data _________________________________
# _________________________________ World Map Data _________________________________
data("World")
# clean case data
case_data <- n_cases$global %>% group_by(country) %>%
summarise(cases=max(cum_confirm),
cum_heal=max(cum_heal),
cum_dead=max(cum_dead)) %>%
mutate(name=factor(country))
world <- merge(World, case_data, by='name')                            # merge case data
world <<- merge(world, med_age, by='name')                             # merge median age data
world <<- merge(world, global_population, by='name', all.x=TRUE)       # add global population data
}
get_data <- function() {
# run to fetch & clean all the data
# ______________________________ South African Data ______________________________
# provincial data
province <- c('Western Cape','Eastern Cape','Northern Cape', 'Free State', 'KwaZulu-Natal', 'North West',
'Gauteng', 'Mpumalanga', 'Limpopo')
population <- c(6621103, 6522734, 1225555, 2954348, 11384722, 3978955, 14717040, 4523874, 5797275)
population_2 <- paste(round(population/1000000, 2), 'm', sep='')
density <- c(51.1, 38.6, 3.3, 22.8, 120.7, 37.9, 809.6, 59.1, 46.1)
provincial.data <- data.frame(province, population, population_2, density, stringsAsFactors=FALSE)
# --- Add later ---               # Gender & Age demographics
Age <- c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+')
Male <- c('5 292 766','4 842 847','5 237 328','3 754 553','2 598 068','1 823 299','1 013 912','458 781','176 237')
Female <- c('5 212 437', '4 755 516', '5 196 531', '2 751 224', '2 970 834', '2 192 398', '1 329 660', '770 816', '402 352')
total <- c('10 505 203','9 598 363','10 433 859','6 505 777','5 568 902','4 015 697','2 343 572','1 229 597','419 989' )
age.data <- data.frame(Age, Male, Female,total, stringsAsFactors=FALSE)
# --- Add later ---
# Get South African Covid Data
covid_sa_url <- 'https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_South_Africa'
covid_sa <<- read_html(covid_sa_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table[3]') %>% html_table(fill=T)
# geospatial data
south_africa <<- readShapeSpatial('data/gadm36_ZAF_shp/gadm36_ZAF_1.shp')
# ______________________________ South African Data ______________________________
# _________________________________ Global Data _________________________________
# global case data
n_cases <<- load_nCov2019(lang='en')
# median population data
med_age <<- read.csv('data/median-age.csv')
# clean
med_age <<- group_by(med_age, Entity) %>% filter(Year==2020) %>%
transmute(name=factor(Entity),
code=Code,
country=Entity,
median_age=UN.Population.Division..Median.Age...2017...years.)
# Global Population Data
global_population_url <- 'https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population'
global_population <<- read_html(global_population_url) %>% html_node(xpath='//*[@id="mw-content-text"]/div/table') %>% html_table(fill=T)
global_population <<- transmute(global_population,
'rank'=Rank,
'country'=`Country (or dependent territory)`,
'population'=Population,
'percent_of_population'=`% of worldpopulation`)
global_population$population <<- as.numeric(gsub(',', '', global_population$population))
global_population$pop_char <<- paste(round(global_population$population/1000000, 2), 'm', sep='')
global_population [1,2] <<- "China"
global_population [3,2] <<- "United States"
global_population [9,2] <<- "Russia"
global_population [20,2] <<- "France"
global_population [22,2] <<- "United Kingdom"
global_population [25,2] <<- "Tanzania"
global_population [34,2] <<- "Ukraine"
global_population [39,2] <<- "Morocco"
global_population [56,2] <<- "Taiwan"
global_population [67,2] <<- "Netherlands"
global_population [71,2] <<- "Somalia"
global_population [107,2] <<- "Serbia"
global_population [131,2] <<- "Georgia"
global_population [142,2] <<- "Moldova"
global_population [151,2] <<- "Kosovo"
global_population [170,2] <<- "Western Sahara"
global_population [174,2] <<- "Transnistria"
global_population [180,2] <<- "Northern Cyprus"
global_population [185,2] <<- "Abkhazia"
global_population [191,2] <<- "Artsakh"
global_population [212,2] <<- "South Ossetia"
global_population$name <<- global_population$country
# save data
write_csv(global_population, './data/global_population.csv')
# _________________________________ Global Data _________________________________
# _________________________________ Concatenate Data _________________________________
# Extract number of cases
test <- t(covid_sa[covid_sa$Date=='Cases',1:10])
test <- data.frame(test[2:nrow(test),])
colnames(test) <- 'Cases'
# test$Cases <- as.numeric(as.character(test$Cases))
# add to dataframe
south_africa@data <<- cbind(test, south_africa@data)
# province data
south_africa@data <<- merge(south_africa@data, provincial.data, by.x='NAME_1', by.y='province')
# _________________________________ Concatenate Data _________________________________
# _________________________________ World Map Data _________________________________
data("World")
# clean case data
case_data <- n_cases$global %>% group_by(country) %>%
summarise(cases=max(cum_confirm),
cum_heal=max(cum_heal),
cum_dead=max(cum_dead)) %>%
mutate(name=factor(country))
world <- merge(World, case_data, by='name')                            # merge case data
world <<- merge(world, med_age, by='name')                             # merge median age data
world <<- merge(world, global_population, by='name', all.x=TRUE)       # add global population data
}
get_data()
runApp('shiny-app')
global_population$population
read.csv('./data/global_population.csv')
runApp('shiny-app')
read.csv('./data/global_population.csv')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
library(shiny)
library(shiny)
library(tidyverse)
library(coronavirus)
library(sf)
library(raster)
library(htmltab)
library(tmap)
library(leaflet)
library(ggplot2)
library(maptools)
library(rvest)
library(RColorBrewer)
library(htmlwidgets)
library(ggrepel)
library(nCov2019)
library(chinamap)
library(plotly)
library(tidyr)
library(ggrepel)
runApp('shiny-app')
runApp('shiny-app')
